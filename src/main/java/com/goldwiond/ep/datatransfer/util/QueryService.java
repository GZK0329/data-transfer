package com.goldwiond.ep.datatransfer.util;

import ch.qos.logback.core.joran.util.beans.BeanUtil;
import com.goldwiond.ep.datatransfer.dao.PgTest;
import com.goldwiond.ep.datatransfer.entity.QueryEntity;
import com.goldwiond.ep.datatransfer.entity.WtidTime;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.sql.*;
import java.time.Duration;
import java.time.Instant;
import java.time.LocalDateTime;
import java.util.*;
import java.util.stream.Collectors;

@Slf4j
@Service
public class QueryService {

    @Autowired
    private PgTest pgTest;

    private static List<String> realTime0 = new ArrayList<>(Arrays.asList("WCNV.AC.Ra.F32.ChopperI", "WCNV.AC.Ra.F32.IDCI", "WCNV.Other.Rn.U16.ConverterType", "WCNV.Posi.Ra.F32.Azimuth", "WCNV.PPV.Ra.F32.RecitfierI", "WCNV.PPV.Ra.F32.UDCnegative", "WCNV.PPV.Ra.F32.UDCpositive", "WCNV.Temp.Ra.F32.CapaDcLink", "WCNV.Temp.Ra.F32.GenCapa", "WCNV.Temp.Ra.F32.IGBT1", "WCNV.Temp.Ra.F32.IGBT2", "WCNV.Temp.Ra.F32.IGBT3", "WCNV.Temp.Ra.F32.IGBTBreak", "WCNV.Temp.Ra.F32.IGBTCabinet1", "WCNV.Temp.Ra.F32.IGBTCabinet2", "WCNV.Temp.Ra.F32.IGBTL1a", "WCNV.Temp.Ra.F32.IGBTL1b", "WCNV.Temp.Ra.F32.IGBTL2a", "WCNV.Temp.Ra.F32.IGBTL2b", "WCNV.Temp.Ra.F32.IGBTL3a", "WCNV.Temp.Ra.F32.IGBTL3b", "WCNV.Temp.Ra.F32.IGBTMax", "WCNV.Temp.Ra.F32.IGBTNet", "WCNV.Temp.Ra.F32.InDuc1", "WCNV.Temp.Ra.F32.Induc2", "WCNV.Temp.Ra.F32.InDuctorDc", "WCNV.Temp.Ra.F32.Rectifier", "WCNV.TurSt.Rn.I16.Node10", "WCNV.TurSt.Rn.I16.Node11", "WCNV.TurSt.Rn.I16.Node20"));

    private static List<String> realTime6 = new ArrayList<>(Arrays.asList("SPCO.DV.Ra.F32.1", "SPCO.DV.Ra.F32.2", "SPCO.DV.Ra.F32.3", "SPCO.DV.Ra.F32.4", "SPCO.DV.Ra.F32.5", "SPCO.Other.Ra.F32.YL1", "SPCO.DC.Ra.F32.1", "SPCO.DC.Ra.F32.2", "SPCO.DC.Ra.F32.3", "SPCO.DC.Ra.F32.4", "SPCO.DC.Ra.F32.5", "SPCO.Other.Ra.F32.YL2", "SPCO.PwrDC.Ra.F32.1", "SPCO.PwrDC.Ra.F32.2", "SPCO.PwrDC.Ra.F32.3", "SPCO.PwrDC.Ra.F32.4", "SPCO.PwrDC.Ra.F32.5", "SPCO.PwrDC.Ra.F32", "SPCO.DC.Ra.F32.All", "SPCO.Temp.Ra.F32", "SPCO.DV.Ra.F32", "SPCO.DC.Ra.F32.1BH1", "SPCO.DC.Ra.F32.1BH2", "SPCO.DC.Ra.F32.1BH3", "SPCO.DC.Ra.F32.1BH4", "SPCO.Other.Ra.F32.YL3", "SPCO.Other.Ra.F32.YL4", "SPCO.DC.Ra.F32.2BH1", "SPCO.DC.Ra.F32.2BH2", "SPCO.DC.Ra.F32.2BH3"));

    private static List<String> realTime4 = new ArrayList<>(Arrays.asList("SPIN.PwrAt.Ra.F32", "SPIN.PwrReact.Ra.F32", "SPIN.PwrAt.Ra.F32.XGLFKZ", "SPIN.PwrReact.Ra.F32.XGLFKZ", "SPIN.Other.Ra.F32.day", "SPIN.Other.Ra.F32.SBBMLX", "SPIN.PwrAt.Ra.F32.EDSC", "SPIN.Other.Ra.F32.SCLX", "SPIN.TotEgyAt.Wt.F32", "SPIN.Other.Ra.F32.ZYXSJ", "SPIN.Temp.Ra.F32", "SPIN.Other.Ra.F32.BL1", "SPIN.DV.Ra.F32.1", "SPIN.DC.Ra.F32.1", "SPIN.DV.Ra.F32.2", "SPIN.DC.Ra.F32.2", "SPIN.DV.Ra.F32.3", "SPIN.DC.Ra.F32.3", "SPIN.PwrDC.Ra.F32", "SPIN.PhV.Ra.F32.AB", "SPIN.PhV.Ra.F32.BC", "SPIN.PhV.Ra.F32.CA", "SPIN.AC.Ra.F32.A", "SPIN.AC.Ra.F32.B", "SPIN.AC.Ra.F32.C", "SPIN.PwrReact.Ra.F32.A", "SPIN.PwrReact.Ra.F32.B", "SPIN.PwrReact.Ra.F32.C", "SPIN.PF.Ra.F32", "SPIN.HZ.Ra.F32.FKZ"));

    private static List<String> realTime1000 = new ArrayList<>(Arrays.asList("MESD.DV.Ra.F32.A", "MESD.DC.Ra.F32", "MESD.Other.Ra.F32", "MESD.TurSt.Ra.F32", "MESD.DV.Ra.F32.1D1", "MESD.DV.Ra.F32.1D2", "MESD.DV.Ra.F32.1D3", "MESD.DV.Ra.F32.1D4", "MESD.DV.Ra.F32.1D5", "MESD.DV.Ra.F32.1D6", "MESD.DV.Ra.F32.1D7", "MESD.DV.Ra.F32.1D8", "MESD.DV.Ra.F32.2D1", "MESD.DV.Ra.F32.2D2", "MESD.DV.Ra.F32.2D3", "MESD.DV.Ra.F32.2D4", "MESD.DV.Ra.F32.2D5", "MESD.DV.Ra.F32.2D6", "MESD.DV.Ra.F32.2D7", "MESD.DV.Ra.F32.2D8", "MESD.DV.Ra.F32.3D1", "MESD.DV.Ra.F32.3D2", "MESD.DV.Ra.F32.3D3", "MESD.DV.Ra.F32.3D4", "MESD.DV.Ra.F32.3D5", "MESD.DV.Ra.F32.3D6", "MESD.DV.Ra.F32.3D7", "MESD.DV.Ra.F32.3D8", "MESD.DV.Ra.F32.4D1", "MESD.DV.Ra.F32.4D2"));

    private static List<String> realTime1 = new ArrayList<>(Arrays.asList("35CX.AC.Ra.F32.1CLDLA", "35CX.AC.Ra.F32.1CLDLB", "35CX.AC.Ra.F32.1CLDLC", "35CX.AC.Ra.F32.1CLWJLL", "35CX.PPV.Ra.F32.1CLDYA", "35CX.PPV.Ra.F32.1CLDYB", "35CX.PPV.Ra.F32.1CLDYC", "35CX.PhV.Ra.F32.1CLDYAB", "35CX.PhV.Ra.F32.1CLDYBC", "35CX.PhV.Ra.F32.1CLDYCA", "35CX.PhV.Ra.F32.1CL3U0", "35CX.AV.Ra.F32.1XLDY", "35CX.HZ.Ra.F32", "35CX.PwrAt.Ra.F32", "35CX.PwrReact.Ra.F32", "35CX.PF.Ra.F32", "35CX.Other.Ra.F32.DZQH", "35CX.AC.Ra.F32.1CLA", "35CX.AC.Ra.F32.1CLB", "35CX.AC.Ra.F32.1CLC", "35CX.AC.Ra.F32.1DLA", "35CX.AC.Ra.F32.1DLB", "35CX.AC.Ra.F32.1DLC", "35CX.AC.Ra.F32.1DCGSA", "35CX.AC.Ra.F32.1DCGSB", "35CX.AC.Ra.F32.1DCGSC", "35CX.AC.Ra.F32.1ZCLL", "35CX.AC.Ra.F32.1WJLL", "35CX.PPV.Ra.F32.1DYA", "35CX.PPV.Ra.F32.1DYB"));

    private static List<Integer> wtids = new ArrayList<>(Arrays.asList(106001014, 106001024, 106001015, 106001016, 106001006, 106001026, 106001004, 106001053, 106001007, 106001012));

    private static List<String> statistic0 = new ArrayList<>(Arrays.asList("WCNV.Temp.Ra.F32.IGBTCabinet2[AVG]", "WCNV.Temp.Ra.F32.CapaDcLink[AVG]", "WCNV.Temp.Ra.F32.CapaDcLink[MAX]", "WCNV.Temp.Ra.F32.CapaDcLink[MIN]", "WCNV.Temp.Ra.F32.GenCapa[AVG]", "WCNV.Temp.Ra.F32.GenCapa[MAX]", "WCNV.Temp.Ra.F32.GenCapa[MIN]", "WCNV.Temp.Ra.F32.IGBT1[AVG]", "WCNV.Temp.Ra.F32.IGBT1[MAX]", "WCNV.Temp.Ra.F32.IGBT1[MIN]", "WCNV.Temp.Ra.F32.IGBT2[AVG]", "WCNV.Temp.Ra.F32.IGBT2[MAX]", "WCNV.Temp.Ra.F32.IGBT2[MIN]", "WCNV.Temp.Ra.F32.IGBT3[AVG]", "WCNV.Temp.Ra.F32.IGBT3[MAX]", "WCNV.Temp.Ra.F32.IGBT3[MIN]", "WCNV.Temp.Ra.F32.IGBTBreak[AVG]", "WCNV.Temp.Ra.F32.IGBTBreak[MAX]", "WCNV.Temp.Ra.F32.IGBTBreak[MIN]", "WCNV.Temp.Ra.F32.IGBTCabinet1[AVG]", "WCNV.Temp.Ra.F32.IGBTCabinet1[MAX]", "WCNV.Temp.Ra.F32.IGBTCabinet1[MIN]", "WCNV.Temp.Ra.F32.IGBTCabinet2[MAX]", "WCNV.Temp.Ra.F32.IGBTCabinet2[MIN]", "WCNV.Temp.Ra.F32.IGBTL1a[AVG]", "WCNV.Temp.Ra.F32.IGBTL1a[MAX]", "WCNV.Temp.Ra.F32.IGBTL1a[MIN]", "WCNV.Temp.Ra.F32.IGBTL1b[AVG]", "WCNV.Temp.Ra.F32.IGBTL1b[MAX]", "WCNV.Temp.Ra.F32.IGBTL1b[MIN]"));

    private static List<String> statistic3 = new ArrayList<>(Arrays.asList("WTRF.PPV.Ra.F32.C11[MIN]", "WTRF.PhV.Ra.F32.CA11[MAX]", "WTRF.PPV.Ra.F32.C2[AVG]", "WTRF.PhV.Ra.F32.AB2[MIN]", "WTRF.PhV.Ra.F32.AB22[MAX]", "WTRF.PhV.Ra.F32.BC22[MIN]", "WTRF.AV.Ra.F32.FX22[MIN]", "WTRF.AV.Ra.F32.FX22[AVG]", "WTRF.AC.Ra.F32.BHB[MIN]", "WTRF.AC.Ra.F32.BHC[AVG]", "WTRF.PwrAt.Ra.F32.A[MAX]", "WTRF.PwrReact.Ra.F32.A[MIN]", "WTRF.PwrReact.Ra.F32.A[AVG]", "WTRF.Power.Ra.F32.A1[MAX]", "WTRF.PF.Ra.F32.B[AVG]", "WTRF.PwrAt.Ra.F32.C[MAX]", "WTRF.PwrAt.Ra.F32.C[MIN]", "WTRF.PwrAt.Ra.F32.C[AVG]", "WTRF.PwrReact.Ra.F32.C[MAX]", "WTRF.PwrReact.Ra.F32.C[MIN]", "WTRF.PwrReact.Ra.F32.C[AVG]", "WTRF.Power.Ra.F32.ALL1[AVG]", "WTRF.PF.Ra.F32.ZL1[MAX]", "WTRF.PF.Ra.F32.ZL1[MIN]", "WTRF.PF.Ra.F32.ZL1[AVG]", "WTRF.AC.Ra.F32.A11[MIN]", "WTRF.AC.Ra.F32.A11[AVG]", "WTRF.AC.Ra.F32.B11[MAX]", "WTRF.AC.Ra.F32.B11[MIN]", "WTRF.AC.Ra.F32.B11[AVG]"));

    private static List<String> statistic4 = new ArrayList<>(Arrays.asList("SPIN.PwrAt.Ra.F32[MAX]", "SPIN.PwrReact.Ra.F32[MAX]", "WTUR.PwrAt.Ra.F32[MAX]", "WTUR.PwrReact.Ra.F32[MAX]", "SPIN.PwrAt.Ra.F32[AVG]", "SPIN.PwrReact.Ra.F32[AVG]", "WTUR.PwrAt.Ra.F32[AVG]", "WTUR.PwrReact.Ra.F32[AVG]", "SPIN.PwrAt.Ra.F32[MIN]", "SPIN.PwrReact.Ra.F32[MIN]", "WTUR.PwrAt.Ra.F32[MIN]", "WTUR.PwrReact.Ra.F32[MIN]", "WTUR.Other.Ra.F32.day[max]", "WTUR.Other.Ra.F32.month[max]", "WTUR.Other.Ra.F32.year[max]", "WTUR.TotEgyAt.Wt.F32[max]", "SPIN.Other.Ra.F32.day[max]", "SPIN.Other.Ra.F32.month[max]", "SPIN.Other.Ra.F32.year[max]", "SPIN.TotEgyAt.Wt.F32[max]", "WTUR.Other.Ra.F32.day[min]", "WTUR.Other.Ra.F32.month[min]", "WTUR.Other.Ra.F32.year[min]", "WTUR.TotEgyAt.Wt.F32[min]", "SPIN.Other.Ra.F32.day[min]", "SPIN.Other.Ra.F32.month[min]", "SPIN.Other.Ra.F32.year[min]", "SPIN.TotEgyAt.Wt.F32[min]"));

    private static Random random = new Random();

    private String realTime0_10 = "500001090,500001057,500001041,500001025,500001083,500001067,500001004,500001045,500001010,500001100";

    private String realTime0_100 = "500001090,500001057,500001041,500001025,500001083,500001067,500001004,500001045,500001010,500001100,500001040,500001030,500001089,500001054,500001074,500001032,500001059,500001021,500001006,500001078,500001039,500001038,500001093,500001050,500001096,500001003,500001060,500001019,500001046,500001094,500001064,500001055,500001033,500001092,500001043,500001042,500001049,500001011,500001091,500001017,500001082,500001053,500001070,500001009,500001076,500001051,500001098,500001068,500001013,500001016,500001002,500001095,500001065,500001099,500001027,500001052,500001023,500001075,500001056,500001001,500001008,500001077,500001058,500001026,500001007,500005011,500001024,500001061,500001079,500001086,500001005,500001081,500001044,500001087,500001063,500001037,500001062,500001080,500001084,500001048,500001066,500001014,500001022,500001015,500001034,500001028,500001071,500001012,500001097,500001020,500001085,500001069,500001088,500001018,500001073,500001036,500001047,500001029,500001072,500001035";

    private String realTime0_600 = "500001090,500001057,500001041,500001025,500001083,500001067,500001004,500001045,500001010,500001100,500001040,500001030,500001089,500001054,500001074,500001032,500001059,500001021,500001006,500001078,500001039,500001038,500001093,500001050,500001096,500001003,500001060,500001019,500001046,500001094,500001064,500001055,500001033,500001092,500001043,500001042,500001049,500001011,500001091,500001017,500001082,500001053,500001070,500001009,500001076,500001051,500001098,500001068,500001013,500001016,500001002,500001095,500001065,500001099,500001027,500001052,500001023,500001075,500001056,500001001,500001008,500001077,500001058,500001026,500001007,500005011,500001024,500001061,500001079,500001086,500001005,500001081,500001044,500001087,500001063,500001037,500001062,500001080,500001084,500001048,500001066,500001014,500001022,500001015,500001034,500001028,500001071,500001012,500001097,500001020,500001085,500001069,500001088,500001018,500001073,500001036,500001047,500001029,500001072,500001035,500001031,632878420,632878446,632878443,632878401,632878402,632878449,632878409,632878415,632878433,632878407,632878403,632878430,632878411,632878413,632878435,632878448,632878429,632878439,632878450,632878421,632878440,632878425,632878003,632878444,632878414,632878423,632878445,632878416,632878419,632878424,632878426,632878406,632878432,632878437,632878410,632878418,632878412,632878427,632878434,632878431,632878441,632878417,632878404,632878004,632878447,632878438,632878436,632878442,632878422,632878408,632878428,632878405,632818137,632818133,632818044,632818020,632818085,632818015,632818105,632818009,632818025,632818048,632818060,632818124,632818114,632818046,632818160,632818033,632818173,632818111,632818207,632818095,632818210,632818069,632818067,632818122,632818211,632818146,632818145,632818165,632818138,632818118,632818199,632818212,632818030,632818037,632818134,632818068,632818035,632818041,632818121,632818103,632818147,632818034,632818175,632818152,632818093,632818004,632818066,632818149,632818013,632818074,632818075,632818144,632818101,632818109,632818022,632818043,632818166,632818094,632818078,632818026,632818153,632818143,632818154,632818062,632818168,632818151,632818055,632818052,632818019,632818010,632818119,632818073,632818083,632818215,632818110,632818102,632818130,632818089,632818021,632818072,632818194,632818054,632818079,632818204,632818213,632818172,632818206,632818159,632818008,632818156,632818148,632818180,632818027,632818120,632818017,632818036,632818196,632818059,632818051,632818047,632818205,632818096,632818097,632818155,632818042,632818088,632818024,632818128,632818018,632818023,632818011,632818174,632818058,632818077,632818108,632818167,632818076,632818131,632818006,632818150,632818084,632818140,632818056,632818071,632818016,632818157,632818200,632818136,632818178,632818107,632818125,632818202,632818176,632818090,632818100,632818028,632818203,632818070,632818039,632818195,632818092,632818080,632818142,632818197,632818049,632818005,632818014,632818112,632818087,632818129,632818106,632818031,632818127,632818065,632818161,632818012,632818116,632818064,632818104,632818061,632818135,632818099,632818003,632818171,632818082,632818214,632818126,632818158,632818029,632818002,632818132,632818001,632818198,632818040,632818162,632818045,632818115,632818057,632818113,632818091,632818123,632818170,632818209,632818179,632818141,632818169,632818086,632818007,632818098,632818201,632818117,632818063,632818053,632818038,632818177,632818139,632818050,632818081,632818032,632818208,106001320,106001307,106001304,106001305,106001376,106001329,106001010,106001306,106001363,106001364,106001025,106001347,106001387,106001079,106001040,106001336,106001034,106001016,106001049,106001378,106001371,106001021,106001396,106001082,106001006,106001303,106001321,106001018,106001349,106001390,106001041,106001385,106001367,106001311,106001313,106001309,106001087,106001086,106001352,106001342,106001011,106001375,106001078,106001044,106001038,106001391,106001020,106001369,106001341,106001397,106001381,106001048,106001317,106001394,106001407,106001334,106001386,106001343,106001042,106001382,106001080,106001362,106001332,106001014,106001039,106001030,106001346,106001338,106001032,106001073,106001357,106001365,106001358,106001031,106001314,106001088,106001389,106001402,106001302,106001015,106001301,106001340,106001308,106001379,106001408,106001012,106001023,106001052,106001051,106001350,106001315,106001047,106001316,106001395,106001036,106001348,106001004,106001008,106001405,106001083,106001009,106001388,106001017,106001331,106001359,106001310,106001043,106001003,106001319,106001360,106001368,106001028,106001027,106001373,106001022,106001024,106001393,106001403,106001318,106001324,106001327,106001335,106001354,106001333,106001339,106001366,106001380,106001076,106001019,106001053,106001356,106001392,106001374,106001344,106001322,106001383,106001075,106001337,106001326,106001050,106001330,106001007,106001312,106001401,106001353,106001081,106001328,106001013,106001345,106001084,106001074,106001323,106001026,106001085,106001372,106001029,106001370,106001351,106001037,106001399,106001355,106001033,106001398,106001077,106001361,106001045,106001035,106001046,106001400,106001377,106001002,106001404,106001406,106001384,106001005,106001325,106001072,632865109,632865204,632865126,632865205,632865117,632865101,632865217,632865224,632865122,632865200,632865222,632865221,632865207,632865114,632865128,632865121,632865216,632865213,632865127,632865203,632865201,632865123,632865129,632865208,632865212,632865120,632865130,632865102,632865103,632865211,632865214,632865132,632865206,632865115,632865104,632865110,632865113,632865106,632865220,632865202,632865111,632865131,632865215,632865118,632865209,632865219,632865105,632865210,632865119,632865133,632865116,632865223,632865125,632865218,632865112,632865107,632865124,632865108,632809048,632809051,632809018,632809044,632809012,632809036,632809042,632809053,632809038,632809049,632809031,632809011";

    private String realTime4_10 = "630008040,630008042,630008067,630008016,630008015,630008070,630008088,630008080,630008084,630008083";

    private String realTime1_10 = "632546901,630016901,630002901,630018901,630003901,500001701,632818901,632522153,632865901,632809111";

    private String realTime4_100 = "630008040,630008042,630008067,630008016,630008015,630008070,630008088,630008080,630008084,630008083,630008085,630008079,630008082,630008087,630008075,630008078,630008103,630008203,630008206,630008213,630008269,630008187,630008185,630008303,630008365,630008671,630008443,630008146,630008748,630008307,630008379,630008732,630008739,630008575,630008586,630008572,630008668,630008649,630008647,630008469,630008392,630008643,630008284,630008158,630008633,630008722,630008490,630008588,630008641,630008712,630008256,630008640,630008227,630008025,630008243,630008471,630008707,630008704,630008498,630008315,630008247,630008591,630008477,630008139,630008313,630008259,630008662,630008594,630008475,630008439,630008399,630008154,630008406,630008109,630008160,630008092,630008116,630008299,630008616,630008681,630008658,630008428,630008690,630008742,630008615,630008488,630008418,630008587,630008032,630008494,630008306,630008761,630008706,630008768,630008355,630008757,630008233,630008168,630008036,630008301";

    private String realTime4_1000 = "630008040,630008042,630008067,630008016,630008015,630008070,630008088,630008080,630008084,630008083,630008085,630008079,630008082,630008087,630008075,630008078,630008103,630008203,630008206,630008213,630008269,630008187,630008185,630008303,630008365,630008671,630008443,630008146,630008748,630008307,630008379,630008732,630008739,630008575,630008586,630008572,630008668,630008649,630008647,630008469,630008392,630008643,630008284,630008158,630008633,630008722,630008490,630008588,630008641,630008712,630008256,630008640,630008227,630008025,630008243,630008471,630008707,630008704,630008498,630008315,630008247,630008591,630008477,630008139,630008313,630008259,630008662,630008594,630008475,630008439,630008399,630008154,630008406,630008109,630008160,630008092,630008116,630008299,630008616,630008681,630008658,630008428,630008690,630008742,630008615,630008488,630008418,630008587,630008032,630008494,630008306,630008761,630008706,630008768,630008355,630008757,630008233,630008168,630008036,630008301,630008353,630008532,630008133,630008193,630008529,630008481,630008192,630008697,630008257,630008427,630008396,630008114,630008593,630008358,630008764,630008149,630008720,630008300,630008366,630008441,630008370,630008492,630008525,630008383,630008536,630008121,630008296,630008265,630008323,630008538,630008286,630008711,630008115,630008624,630008725,630008452,630008552,630008474,630008623,630008184,630008421,630008559,630008314,630008467,630008098,630008285,630008762,630008541,630008621,630008496,630008683,630008155,630008730,630008558,630008486,630008749,630008743,630008687,630008626,630008700,630008357,630008656,630008432,630008135,630008417,630008104,630008102,630008156,630008330,630008230,630008466,630008266,630008446,630008188,630008642,630008705,630008334,630008199,630008363,630008602,630008200,630008528,630008609,630008570,630008029,630008050,630008497,630008255,630008298,630008378,630008670,630008055,630008751,630008763,630008034,630008482,630008526,630008153,630008531,630008589,630008364,630008523,630008710,630008321,630008412,630008716,630008043,630008209,630008535,630008701,630008292,630008097,630008060,630008580,630008540,630008360,630008405,630008473,630008689,630008457,630008318,630008534,630008628,630008729,630008310,630008394,630008205,630008238,630008659,630008718,630008113,630008493,630008143,630008108,630008274,630008368,630008750,630008157,630008709,630008698,630008159,630008134,630008537,630008585,630008322,630008118,630008198,630008603,630008277,630008260,630008645,630008202,630008281,630008740,630008226,630008440,630008235,630008119,630008214,630008625,630008019,630008367,630008107,630008140,630008046,630008152,630008033,630008759,630008224,630008630,630008054,630008223,630008724,630008038,630008142,630008372,630008101,630008167,630008072,630008335,630008373,630008069,630008229,630008431,630008524,630008053,630008442,630008425,630008250,630008275,630008316,630008254,630008546,630008024,630008686,630008163,630008631,630008063,630008336,630008484,630008682,630008361,630008501,630008554,630008328,630008267,630008403,630008549,630008106,630008311,630008271,630008064,630008057,630008068,630008371,630008423,630008715,630008289,630008747,630008352,630008375,630008189,630008241,630008464,630008696,630008295,630008062,630008215,630008411,630008571,630008520,630008430,630008376,630008667,630008409,630008384,630008123,630008522,630008239,630008312,630008017,630008126,630008573,630008165,630008280,630008272,630008562,630008263,630008099,630008669,630008128,630008236,630008577,630008204,630008733,630008752,630008434,630008463,630008735,630008758,630008756,630008196,630008708,630008302,630008131,630008419,630008031,630008627,630008056,630008521,630008713,630008499,630008147,630008035,630008495,630008437,630008590,630008022,630008264,630008632,630008240,630008527,630008393,630008190,630008304,630008195,630008648,630008329,630008721,630008604,630008567,630008737,630008091,630008288,630008391,630008461,630008691,630008136,630008138,630008129,630008702,630008608,630008111,630008276,630008479,630008622,630008754,630008044,630008636,630008553,630008614,630008130,630008219,630008045,630008048,630008557,630008324,630008569,630008519,630008574,630008699,630008717,630008605,630008617,630008598,630008127,630008282,630008404,630008447,630008161,630008610,630008308,630008208,630008245,630008065,630008120,630008530,630008480,630008767,630008458,630008734,630008429,630008026,630008095,630008502,630008597,630008110,630008408,630008381,630008470,630008703,630008270,630008596,630008320,630008037,630008663,630008389,630008166,630008618,630008290,630008020,630008548,630008719,630008390,630008635,630008601,630008077,630008568,630008584,630008221,630008279,630008090,630008745,630008124,630008059,630008027,630008550,630008197,630008638,630008401,630008489,630008262,630008125,630008629,630008438,630008397,630008246,630008738,630008454,630008305,630008105,630008651,630008620,630008052,630008251,630008422,630008332,630008041,630008039,630008117,630008252,630008231,630008407,630008543,630008448,630008654,630008232,630008387,630008491,630008766,630008076,630008459,630008741,630008374,630008582,630008462,630008093,630008148,630008607,630008297,630008089,630008693,630008728,630008086,630008278,630008765,630008186,630008551,630008151,630008094,630008595,630008327,630008416,630008244,630008333,630008400,630008726,630008694,630008435,630008382,630008051,630008096,630008650,630008657,630008287,630008228,630008410,630008746,630008565,630008444,630008369,630008253,630008579,630008132,630008222,630008468,630008074,630008451,630008023,630008445,630008653,630008268,630008723,630008753,630008058,630008216,630008564,630008164,630008218,630008727,630008398,630008561,630008325,630008611,630008555,630008210,630008356,630008211,630008141,630008665,630008212,630008225,630008634,630008237,630008073,630008066,630008354,630008661,630008465,630008293,630008503,630008755,630008071,630008744,630008544,630008291,630008450,630008487,630008583,630008028,630008380,630008201,630008424,630008672,630008100,630008351,630008504,630008362,630008030,630008388,630008145,630008714,630008112,630008420,630008122,630008436,630008695,630008639,630008542,630008547,630008485,630008414,630008736,630008162,630008637,630008261,630008666,630008248,630008385,630008061,630008556,630008220,630008539,630008207,630008249,630008576,630008283,630008359,630008081,630008644,630008326,630008191,630008688,630008476,630008144,630008581,630008460,630008217,630008273,630008606,630008533,630008415,630008433,630008660,630008018,630008047,630008692,630008566,630008483,630008194,630008664,630008395,630008258,630008453,630008426,630008242,630008331,630008049,630008563,630008684,630008652,630008150,630008021,630008455,630008599,630008456,630008612,630008578,630008386,630008183,630008545,630008560,630008377,630008646,630008294,630008685,630008619,630008309,630008319,630008413,630008731,630008234,630008500,630008760,630008592,630008613,630008655,630008402,630008478,630008472,630008600,630008449,630008137,630008317,630002166,630002173,630002171,630002172,630002158,630002151,630002152,630002161,630002176,630002154,630002174,630002167,630002175,630002181,630002089,630002095,630002657,630002255,630002253,630002254,630002256,630002354,630002356,630002357,630002353,630002605,630002545,630002550,630002628,630002546,630002629,630002633,630002540,630002548,630002553,630002604,630002607,630002252,630002203,630002062,630002486,630002069,630002368,630002135,630002414,630002112,630002430,630002439,630002570,630002350,630002656,630002397,630002395,630002418,630002329,630002462,630002001,630002565,630002402,630002195,630002023,630002060,630002298,630002019,630002043,630002239,630002294,630002348,630002455,630002237,630002407,630002510,630002267,630002337,630002263,630002385,630002246,630002304,630002292,630002039,630002393,630002617,630002035,630002394,630002573,630002003,630002478,630002655,630002399,630002129,630002245,630002336,630002110,630002500,630002241,630002240,630002258,630002419,630002047,630002027,630002581,630002380,630002052,630002559,630002488,630002109,630002379,630002508,630002666,630002410,630002072,630002578,630002445,630002285,630002443,630002045,630002468,630002226,630002063,630002316,630002449,630002323,630002279,630002360,630002020,630002137,630002424,630002194,630002479,630002457,630002403,630002018,630002377,630002218,630002082,630002024,630002651,630002518,630002266,630002040,630002281,630002295,630002097,630002523,630002204,630002564,630002008,630002425,630002431,630002466,630002044,630002378,630002182,630002037,630002126,630002577,630002205,630002061,630002004,630002148,630002453,630002409,630002562,630002067,630002310,630002134,630002485,630002250,630002234,630002235,630002644,630002188,630002017,630002501,630002616,630002247,630002322,630002016,630002107,630002296,630002371,630002599,630002639,630002465,630002087,630002547,630002645,630002269,630002123,630002199,630002311,630002606,630002074,630002531,630002623,630002288,630002664,630002221,630002381,630002050,630002544,630002446,630002484,630002289,630002557,630002030,630002338,630002273,630002318,630002236,630002278,630002334,630002534,630002555,630002280,630002346,630002064,630002503,630002309,630002022,630002626,630002520,630002521,630002391,630002007,630002522,630002332,630002504,630002416,630002622,630002556,630002610,630002434,630002244,630002333,630002301,630002481,630002608,630002210,630002572,630002100,630002011,630002257,630002206,630002652,630002653,630002406,630002200,630002119,630002190,630002536,630002227,630002554,630002474,630002625,630002339,630002400,630002589,630002417,630002136,630002575,630002661,630002085,630002528,630002367,630002514,630002450,630002192,630002283,630002220,630002014,630002207,630002242,630002028,630002524,630002274,630002215,630002369,630002081,630002317,630002208,630002042,630002405,630002230,630002560,630002384,630002382,630002217,630002526,630002650,630002319,630002006,630002635,630002383,630002145,630002140";

    private String realTime1000_1000 = "630058072,630058073,630058074,630058075,630057029,630057007,630057006,630057031,630057010,630057073,630058026,630057033,630057003,630057002,630057017,630057015,630057014,630057027,630057001,630057009,630057025,630057012,630057023,630057024,630057016,630057018,630057026,630057032,630057019,630057008,630057011,630057013,630057022,630057052,630057056,630057066,630057062,630057087,630058297,630058298,630058296,630058299,630058295,630058300,630058294,630058293,630058086,630058224,630058092,630058267,630058214,630057846,630057517,630057597,630057506,630057983,630057351,630057617,630057498,630058063,630057516,630057182,630057922,630057116,630058270,630057353,630057514,630057295,630057217,630058044,630057258,630057362,630057804,630057543,630057459,630057126,630057947,630057883,630057505,630057317,630057739,630057687,630057146,630057332,630057997,630057575,630057361,630057693,630057208,630057723,630057373,630057479,630057762,630057929,630057387,630057975,630058262,630057367,630057408,630057649,630058257,630057841,630058033,630057267,630057831,630057565,630057371,630057533,630058048,630057834,630057768,630057253,630058202,630058028,630058019,630057265,630057988,630057569,630057853,630058100,630057346,630057984,630057771,630057956,630057526,630058215,630057377,630057735,630057229,630057629,630058014,630058023,630057568,630057563,630057996,630057651,630057932,630057422,630057635,630057213,630058233,630057654,630057477,630057175,630057349,630057659,630057939,630057705,630057872,630057607,630057322,630057987,630057148,630057468,630058027,630057958,630057041,630057383,630057719,630057034,630058056,630057816,630057181,630057069,630057949,630057675,630057341,630057736,630057445,630057582,630057443,630057423,630057164,630057063,630057829,630057827,630057485,630057259,630058245,630057871,630057268,630058025,630057298,630057325,630057236,630057766,630057404,630057203,630057178,630057973,630057616,630058030,630058256,630057055,630057749,630057553,630058212,630057103,630058089,630058231,630057755,630057388,630057481,630057518,630057293,630057316,630057787,630057502,630057592,630057777,630057306,630058087,630057757,630058068,630057281,630057272,630057641,630057957,630057718,630057131,630057394,630058070,630057247,630058057,630057157,630057724,630057174,630057097,630057438,630057145,630057042,630057078,630057634,630057153,630057168,630057045,630058230,630057948,630057271,630057909,630057119,630057375,630057854,630057706,630057135,630057962,630058011,630057433,630058031,630057548,630057504,630058052,630057968,630057509,630057138,630057917,630057347,630058266,630057643,630057976,630058095,630057382,630057991,630057473,630057257,630057556,630057789,630057648,630057515,630057729,630057035,630057044,630058077,630057476,630058061,630057484,630057243,630058271,630057166,630057924,630057746,630057342,630057391,630057244,630057112,630057955,630057792,630058284,630057252,630057775,630057255,630057959,630057894,630057921,630057881,630057699,630057828,630057428,630057418,630057235,630057832,630058047,630057356,630057593,630058088,630057054,630057621,630057812,630058236,630057488,630057596,630057435,630057807,630058208,630057197,630057826,630057072,630057519,630057167,630057193,630058243,630057395,630057552,630057328,630057655,630057769,630057904,630057191,630058040,630057288,630057972,630058225,630057588,630057337,630057493,630057615,630057061,630057717,630057835,630057773,630058275,630057611,630057715,630057656,630057049,630057334,630057928,630058265,630057365,630057179,630057523,630057101,630057661,630057986,630057226,630057737,630057465,630058228,630057401,630057885,630058237,630057953,630057911,630057869,630058287,630057551,630057177,630057664,630057623,630057338,630057156,630057798,630058049,630057503,630057865,630057825,630057278,630057751,630057323,630057587,630057068,630057713,630058248,630057416,630057833,630057076,630057577,630057381,630058216,630058229,630057716,630057162,630057231,630057722,630057731,630057857,630057084,630057858,630058096,630057702,630058009,630057963,630057308,630057283,630057743,630057584,630057625,630057327,630057115,630057201,630057051,630057291,630057088,630057036,630058081,630058207,630057765,630057979,630057818,630058045,630057544,630057952,630058239,630058032,630057763,630057125,630057534,630057784,630057619,630057364,630058258,630058013,630057845,630057303,630057982,630057501,630057884,630057874,630057933,630057632,630057464,630057147,630057945,630057198,630057398,630057165,630057096,630057866,630057037,630057566,630057838,630058055,630057499,630057114,630058002,630057412,630057335,630057893,630057102,630057292,630057355,630057455,630058018,630057091,630057919,630057879,630057886,630057057,630058211,630057046,630058094,630057946,630057305,630057774,630057393,630057139,630057302,630057808,630057495,630057309,630057799,630057557,630057368,630058043,630057761,630057411,630057981,630057525,630057496,630057851,630058279,630057636,630058004,630057778,630057823,630058288,630057406,630057741,630057256,630058260,630057905,630057074,630057612,630057847,630057941,630057608,630057733,630057276,630057646,630057639,630057269,630058054,630057133,630057264,630057452,630057507,630058015,630057849,630058251,630057266,630057695,630057892,630058093,630057038,630057585,630057653,630057899,630057143,630057098,630057902,630057965,630057343,630057234,630057089,630058244,630057065,630057673,630057985,630057279,630057171,630057474,630057618,630057209,630058255,630057228,630057277,630058059,630057567,630058038,630057604,630057547,630057692,630057344,630057462,630057212,630057908,630057154,630058247,630058099,630057738,630057357,630057207,630057413,630057779,630058221,630057599,630057745,630057053,630058278,630057631,630057882,630058222,630057118,630057901,630057925,630057674,630057492,630057576,630057472,630058029,630057583,630057454,630057094,630057123,630057456,630057424,630058042,630057354,630057188,630058290,630057732,630057109,630058035,630057571,630057461,630057232,630057859,630057887,630057938,630057942,630057262,630058240,630057214,630057216,630057601,630057189,630057185,630058064,630058213,630057836,630058280,630057104,630057862,630057918,630057409,630058078,630058007,630058209,630058203,630057595,630058041,630057535,630057969,630057483,630057211,630057824,630057111,630057856,630057204,630057888,630057598,630057336,630057633,630057594,630058286,630057149,630057954,630057753,630057273,630057511,630058268,630057482,630057286,630058082,630057105,630058037,630057099,630057246,630057183,630057698,630058083,630057048,630057667,630057095,630058090,630057448,630057554,630057819,630058254,630057439,630057711,630058071,630057913,630058020,630058220,630057868,630057602,630057127,630057744,630057609,630058238,630057296,630058263,630057728,630058205,630057294,630057541,630057669,630057437,630058079,630057427,630058261,630057047,630057478,630057605,630057935,630057436,630058206,630058274,630057844,630057912,630058097,630058012,630057369,630057644,630057366,630057121,630057642,630057221,630057194,630057701,630058217,630057897,630057425,630057764,630057446,630057206,630057079,630057251,630058010,630057889,630057449,630057239,630057263,630057304,630057936,630057907,630057703,630057927,630057658,630058259,630057144,630058053,630057704,630057622,630057759,630057108,630057093,630057537,630057524,630057842,630057725,630057215,630058006,630057951,630058034,630057225,630057458,630058058,630057261,630057676,630057896,630057559,630058235,630057811,630058067,630057756,630057429,630057531,630057339,630057372,630057998,630057527,630057397,630057647,630057677,630057155,630057999,630057512,630057132,630057444,630057867,630057793,630057301,630057977,630057781,630057082,630058076,630058005,630057196,630057389,630057794,630057124,630057043,630057791,630057562,630057721,630058285,630057202,630057487,630057329,630058204,630057067,630057467,630057195,630057426,630057314,630057058,630057447,630058232,630057359,630057668,630057469,630057086,630057934,630057603,630058085,630057809,630057714,630057689,630058283,630057374,630057318,630057326,630058277,630057522,630057172,630058253,630058234,630057392,630058062,630058219,630057727,630057805,630057187,630057821,630057971,630057931,630057579,630058046,630057671,630057685,630057944,630057822,630057961,630057299,630057457,630057405,630058223,630057549,630057345,630057431,630057754,630057663,630057542,630057324,630057152,630057486,630057545,630057586,630057081,630057978,630057801,630058051,630057538,630057843,630057627,630057071,630057129,630057245,630058201,630057964,630058065,630057238,630057249,630057937,630057682,630057914,630057242,630057795,630057075,630057666,630057626,630057348,630057906,630057173,630057709,630057419,630057064,630057163,630057974,630057855,630057284,630057638,630058017,630057564,630057994,630058246,630057441,630057803,630057837,630057274,630058276,630057645,630057421,630057475,630057712,630058226,630058021,630057678,630057137,630057943,630057752,630057839,630057555,630058291,630057916,630057806,630057363,630057747,630057864,630057995,630057161,630058003,630058008,630057141,630057873,630057275,630057591,630057186,630057688,630058024,630057696,630057254,630058050,630057877,630057311,630057561,630057817,630057797,630057923,630057788,630058281,630057558,630058210,630057471,630057734,630057331,630057223,630057285,630057434,630057248,630057077,630057151,630057085,630057312,630057107,630057384,630057684,630057992,630057672,630057915,630058272,630057708,630057134,630057624,630057128,630058098,630057628,630058060,630057707,630057169,630057521,630057776,630057813,630057694,630057352,630057205,630057895,630057113,630057497,630058016,630058039,630057386,630058252,630057665,630057222,630057415,630057637,630057287,630057289,630057679,630057237,630057219,630057378,630057313,630057122,630058084,630057233,630057539,630058250,630057282,630057453,630057742,630057529,630057573,630057989,630057967,630057697,630057657,630058022,630057494,630057532,630057691,630057358,630057466,630057652,630057898,630057785,630057513";

    private String realTime1000_10 = "630058072,630058073,630058074,630058075,630057029,630057007,630057006,630057031,630057010,630057073";

    private String realTime1000_100 = "630058072,630058073,630058074,630058075,630057029,630057007,630057006,630057031,630057010,630057073,630058026,630057033,630057003,630057002,630057017,630057015,630057014,630057027,630057001,630057009,630057025,630057012,630057023,630057024,630057016,630057018,630057026,630057032,630057019,630057008,630057011,630057013,630057022,630057052,630057056,630057066,630057062,630057087,630058297,630058298,630058296,630058299,630058295,630058300,630058294,630058293,630058086,630058224,630058092,630058267,630058214,630057846,630057517,630057597,630057506,630057983,630057351,630057617,630057498,630058063,630057516,630057182,630057922,630057116,630058270,630057353,630057514,630057295,630057217,630058044,630057258,630057362,630057804,630057543,630057459,630057126,630057947,630057883,630057505,630057317,630057739,630057687,630057146,630057332,630057997,630057575,630057361,630057693,630057208,630057723,630057373,630057479,630057762,630057929,630057387,630057975,630058262,630057367,630057408,630057649";

    private String realTime6_1000 = "630018307,630018401,630018380,630018383,630018376,630018395,630018403,630018384,630018379,630018418,630018417,630018427,630018432,630018431,630018429,630018436,630018446,630018462,630018473,630018463,630018477,630018458,630018482,630018495,630018486,630018512,630018526,630018514,630018502,630018509,630018511,630018507,630018516,630018524,630018518,630018513,630018519,630018523,630018504,630018529,630018510,630018521,630018505,630018522,630018503,630018525,630018515,630018527,630018531,630018535,630018534,630018532,630018533,630018536,630018544,630018541,630018537,630018546,630018542,630018539,630018545,630018538,630018543,630018540,630018549,630018557,630018559,630018550,630018560,630018547,630018555,630018553,630018552,630018558,630018561,630018556,630018548,630018562,630018554,630018551,630018591,630018588,630018583,630018563,630018586,630018568,630018570,630018881,630018875,630018878,630018876,630018879,630018880,630018877,630018886,630018888,630018884,630018887,630018885,630018882,630018883,630016129,630016135,630016254,630016253,630016232,630016220,630016259,630016221,630016215,630016238,630016230,630016256,630016218,630016269,630016298,630016278,630016297,630016527,630016531,630016529,630016502,630016498,630016503,630016501,630016499,630016519,630016517,630016500,630016504,630016512,630016509,630016516,630016505,630016518,630016508,630016513,630016522,630016528,630016510,630016523,630016530,630016524,630016511,630016533,630016526,630016520,630016525,630016506,630016545,630016582,630016565,630016559,630016556,630016581,630016549,630016583,630016584,630016579,630016553,630016558,630016542,630016578,630016576,630016535,630016577,630016541,630016543,630016536,630016654,630016671,630016631,630016655,630016645,630016636,630016633,630016632,630016635,630016657,630016652,630016634,630016674,630016651,630016668,630016638,630016666,630016637,630016672,630016628,630016644,630016673,630016627,630016678,630016686,630016690,630016691,630016679,630016697,630016683,630016694,630016689,630016685,630016699,630016695,630016696,630016700,630016680,630016692,630016684,630016688,630016682,630016681,630016687,630016693,630016698,630018863,630018865,630018864,630018862,630018869,630018874,630018868,630018871,630018873,630018872,630018867,630018866,630018870,630018632,630018608,630018595,630018625,630018612,630018646,630018637,630018618,630018623,630018604,630018600,630018825,630016190,630018767,630016140,630018819,630018764,630018801,630016589,630018340,630018349,630018681,630016400,630016491,630018665,630018799,630018847,630018364,630016397,630016277,630016141,630018859,630016386,630018786,630016329,630016122,630016281,630016292,630016119,630018757,630018846,630018732,630018729,630018838,630016176,630016427,630016378,630018806,630016467,630018785,630016358,630018714,630018731,630018835,630016193,630016287,630016354,630016285,630018367,630016106,630016390,630018675,630018667,630016414,630018435,630018483,630018728,630016196,630018677,630016203,630016198,630016276,630018807,630016101,630016174,630016116,630016168,630016311,630016191,630016471,630018348,630016115,630016447,630016485,630018800,630016484,630016335,630016616,630016474,630018310,630016425,630018489,630018347,630016464,630016159,630016107,630016599,630018352,630016621,630018751,630018496,630018783,630018359,630016617,630018333,630018372,630018774,630016175,630016360,630016290,630016138,630016301,630016121,630016371,630016131,630018683,630018694,630018758,630016200,630018701,630018343,630018631,630018797,630016462,630018335,630016279,630016428,630018480,630016433,630016443,630018663,630016610,630018855,630016187,630016385,630018669,630018770,630018849,630018304,630018717,630016160,630016299,630016361,630016291,630018754,630018753,630018695,630018668,630016184,630016307,630016380,630016102,630018641,630018361,630016482,630018369,630016369,630016345,630016494,630016488,630016110,630018726,630018358,630016114,630016153,630018490,630016625,630016155,630016392,630018804,630018336,630018491,630018651,630018853,630016333,630016605,630016438,630016103,630016331,630016458,630016437,630016170,630018441,630016593,630018460,630018318,630016477,630018730,630018861,630018305,630016424,630016480,630016382,630016588,630016118,630016257,630016495,630016312,630016478,630018615,630018582,630016393,630016334,630018397,630016208,630016606,630018476,630018828,630018638,630018457,630018455,630018412,630018707,630016177,630018442,630018645,630018420,630018627,630018356,630018738,630018814,630018492,630018378,630016439,630018433,630016145,630016394,630016450,630018857,630018746,630016623,630018712,630016475,630018444,630016379,630018711,630018500,630018759,630016112,630018324,630018640,630016404,630016204,630016314,630018479,630016181,630018593,630016305,630016603,630016489,630016468,630016364,630018689,630016306,630018661,630016227,630016453,630018816,630018399,630016267,630018782,630018794,630016244,630018405,630018787,630018345,630018585,630016374,630018394,630016466,630018330,630016346,630016330,630018792,630018773,630016194,630018696,630018499,630016300,630016604,630018337,630016595,630016383,630018772,630018572,630018598,630018452,630018704,630016601,630016341,630016284,630018360,630018812,630018311,630018461,630018323,630018597,630016591,630016151,630016217,630016264,630016370,630016465,630018419,630016117,630018657,630018574,630018705,630018468,630016169,630018445,630018396,630018652,630018686,630016165,630018725,630018642,630016271,630016206,630016376,630018439,630016310,630016539,630016554,630016446,630018713,630016586,630016444,630018404,630016142,630018571,630016614,630018765,630018693,630018390,630018733,630016469,630018389,630018809,630018421,630018817,630016332,630016146,630018398,630018827,630018353,630016245,630016352,630016105,630016239,630018387,630018493,630016343,630016326,630016573,630016137,630018781,630016219,630018606,630018565,630016185,630018648,630016288,630018780,630016417,630018613,630016149,630016538,630018778,630018763,630016223,630016624,630018407,630016483,630016574,630016130,630016154,630018744,630016309,630018610,630018315,630016429,630016357,630018678,630016197,630018365,630018478,630016442,630016251,630016544,630018690,630016365,630018456,630018303,630016248,630018697,630016336,630016395,630018821,630016551,630018620,630018327,630018393,630018373,630016366,630016293,630016493,630018775,630016598,630018596,630016136,630016451,630016163,630018670,630016150,630016363,630018691,630018856,630018392,630016457,630018673,630016375,630016225,630018660,630018374,630016435,630018813,630018653,630018771,630018837,630016188,630018702,630018682,630016224,630018309,630018650,630016237,630018576,630016454,630018674,630016592,630018823,630016585,630018410,630018756,630018368,630016240,630018684,630016272,630016242,630016283,630016423,630016609,630018338,630018601,630016426,630016344,630018749,630016434,630016481,630016449,630018851,630018466,630016132,630016418,630018451,630016265,630018415,630018453,630016282,630016313,630016139,630018484,630016289,630018314,630016322,630018692,630018443,630016626,630018811,630018658,630018752,630016555,630018319,630018803,630018796,630016384,630016261,630018679,630016324,630016347,630016250,630018438,630018659,630018688,630016643,630018858,630018793,630018845,630016255,630018788,630018422,630016156,630018755,630016396,630018424,630018617,630016260,630018426,630016270,630016399,630016226,630018789,630018720,630018454,630016459,630016566,630016325,630018721,630016252,630016207,630016350,630016596,630016419,630018802,630018440,630018321,630016211,630016320,630018630,630018626,630018614,630016630,630018719,630018850,630018621,630018619,630018698,630016431,630016479,630016547,630018411,630018602,630016613,630018709,630018363,630018339,630018306,630018860,630018385,630016195,630016148,630016463,630016460,630016436,630018409,630016205,630018848,630016664,630016258,630018375,630016179,630016192,630018795,630018735,630018344,630016676,630018743,630016445,630016537,630016144,630016408,630018616,630018329,630016476,630018326,630016564,630016367,630018386,630018768,630016602,630016472,630016315,630016319,630018644,630016403,630016406,630016372,630016127,630018643,630018301,630018498,630016661,630016134,630018609,630016461,630016430,630016166,630016113,630016381,630016590,630016649,630018833,630016580,630018567,630018723,630018581,630016561,630016351,630016280,630016152,630016304,630018766,630016231,630018634,630016667,630016611,630018388,630018844,630016622,630016111,630018607,630016348,630018573,630018590,630016490,630016560,630016183,630018716,630018685,630018580,630016653,630018575,630018700,630018722,630018494,630016161,630016641,630018822,630018406,630016359,630018611,630018564,630016473,630016182,630018762,630018357,630016448,630016213,630016229,630016402,630016235,630018647,630016274,630016178,630018302,630016349,630018656,630016570,630018676,630018377,630016562,630018366,630016563,630018587,630018829,630016665,630018584,630018830,630018815,630018448,630018654,630016405,630016456,630016356,630016302,630016236,630016128,630016339,630018437,630018434,630018517,630016597,630018737,630016575,630016296,630016615,630016108,630016409,630016546,630018649,630016321,630016650,630018841,630018706,630018488,630016571,630016157,630016600,630016497,630016233,630018408,630016120,630018428,630016660,630018530,630018605,630016337,630018639,630018852,630018810,630016228,630016413,630018334,630016164,630016126,630018508,630018599,630018569,630016173,630018777,630016316,630018594,630018710,630016273,630016362,630018400,630016639,630016303,630018662,630016241,630018316,630016247,630016125,630018589,630018734,630018402,630018818,630016440,630018824,630018603,630016342,630018381,630018382,630016338,630018791,630018449,630018472,630016199,630016629,630016412,630018628,630018831,630016222,630016640,630016421,630018313,630016608,630018655,630016327,630018836,630018312,630018371,630018592,630018840,630016548,630018425,630016612,630016416,630016470,630016648,630016323";

    private String realTime6_100 = "630018307,630018401,630018380,630018383,630018376,630018395,630018403,630018384,630018379,630018418,630018417,630018427,630018432,630018431,630018429,630018436,630018446,630018462,630018473,630018463,630018477,630018458,630018482,630018495,630018486,630018512,630018526,630018514,630018502,630018509,630018511,630018507,630018516,630018524,630018518,630018513,630018519,630018523,630018504,630018529,630018510,630018521,630018505,630018522,630018503,630018525,630018515,630018527,630018531,630018535,630018534,630018532,630018533,630018536,630018544,630018541,630018537,630018546,630018542,630018539,630018545,630018538,630018543,630018540,630018549,630018557,630018559,630018550,630018560,630018547,630018555,630018553,630018552,630018558,630018561,630018556,630018548,630018562,630018554,630018551,630018591,630018588,630018583,630018563,630018586,630018568,630018570,630018881,630018875,630018878,630018876,630018879,630018880,630018877,630018886,630018888,630018884,630018887,630018885,630018882";

    private String realTime6_10 = "630018307,630018401,630018380,630018383,630018376,630018395,630018403,630018384,630018379,630018418";

    private String realTime3_10 = "632809643,632809645,630003852,630003851,632809608,630003877,630003884,630003874,632809630,632809628";

    private String realTime3_100 = "632809643,632809645,630003852,630003851,632809608,630003877,630003884,630003874,632809630,632809628,632809629,632865650,632865646,632865648,632865644,632865645,632865651,632865647,632865635,632865649,630002715,630002720,630002719,500001101,500001102,500001116,500001110,500001123,500001120,500001108,500001124,500001113,500001119,500001103,500001122,500001105,500001104,500001114,500001109,500001107,500001111,500001121,500001112,500001106,500001117,500001118,500001115,500001145,500001128,500001139,500001138,500001130,500001134,500001147,500001135,500001141,500001127,500001131,500001148,500001144,500001140,500001142,500001129,500001143,500001126,500001136,500001132,500001125,500001133,500001137,500001146,500001171,500001152,500001154,500001150,500001160,500001169,500001166,500001170,500001157,500001161,500001167,500001165,500001151,500001155,500001172,500001149,500001168,500001163,500001159,500001153,500001162,500001164,500001156,500001158,500001192,500001190,500001175,500001177,500001194";

    private String realTime3_400 = "632524602,632809643,632809645,630003852,630003851,632809608,630003877,630003884,630003874,632809630,632809628,632809629,632865650,632865646,632865648,632865644,632865645,632865651,632865647,632865635,632865649,630018101,630018102,630002715,630016843,630016828,630002720,630002719,500001101,500001102,500001116,500001110,500001123,500001120,500001108,500001124,500001113,500001119,500001103,500001122,500001105,500001104,500001114,500001109,500001107,500001111,500001121,500001112,500001106,500001117,500001118,500001115,500001145,500001128,500001139,500001138,500001130,500001134,500001147,500001135,500001141,500001127,500001131,500001148,500001144,500001140,500001142,500001129,500001143,500001126,500001136,500001132,500001125,500001133,500001137,500001146,500001171,500001152,500001154,500001150,500001160,500001169,500001166,500001170,500001157,500001161,500001167,500001165,500001151,500001155,500001172,500001149,500001168,500001163,500001159,500001153,500001162,500001164,500001156,500001158,500001192,500001190,500001175,500001177,500001194,500001195,500001187,500001180,500001193,500001174,500001189,500001178,500001173,500001186,500001184,500001181,500001179,500001196,500001188,500001176,500001182,500001183,500001185,500001191,632809601,630058608,630058609,630058606,630058610,630058625,630058614,630058619,630058615,630058602,630058611,630058622,630058613,630058618,630058616,630058623,630058620,630058601,630058607,630058621,630058603,630058604,630058605,630058617,630058624,630058612,632809636,632809632,632809637,632809635,632809633,632809634,630016845,632522137,630002706,630018141,632522133,630008347,632522121,632522149,630002728,632809618,630018114,632522120,632809607,630002727,632546836,632522128,632522129,632546833,632865654,630018120,630002721,630003854,632546853,632546856,630016817,630003867,632809650,630016847,630018140,632522127,630018125,630016846,630018128,632546855,630016814,630018118,630003860,630016805,630018138,632809651,632809623,632522125,632522123,630008514,630018133,630018132,630008180,632524601,632546848,630003865,632546842,630008014,632546829,630016810,630016840,630003864,630016831,630018108,630016818,630018130,632522139,630003886,630002726,630002710,632865641,630018115,632522143,632809641,632865652,630018117,630018131,630002716,630003859,630016825,630018110,630002729,632546851,632522104,632524608,630003876,632522110,630018119,630016808,632522134,632865642,632809642,632809620,630016812,630016850,630003869,632522109,630016829,630003882,630018127,632809625,632809603,500001199,632522111,630002723,632522118,630002701,630008680,630018135,630018121,630016837,630008518,630002707,632546852,630018104,632865656,630016838,630003879,630018137,632809616,632522122,632809605,500001198,630018112,630016848,630002713,630003887,630002712,630003861,630008513,632522130,630016849,630016820,630018134,632809615,630016803,632522148,632522136,630008013,632524605,630008512,632865655,632546841,630003881,632546840,632522108,632865657,500001200,632522124,630016802,630008677,630002709,500001197,630008344,630018139,632809624,630018123,632546843,632522147,630008517,632546838,630008176,630002714,632809640,632809621,632809622,630008678,630016823,630008516,632546831,632809655,630018124,632809646,632522102,632522119,630018109,630003850,632522138,630018105,630016833,630008012,632546839,630003883,632546844,630003880,632809638,630003870,632865640,630008182,630002708,630003885,630016819,630016830,630016811,630008010,630016844,632809648,630016813,630018122,632546845,632809626,630016809,630016807,630002702,632809647,630018142,632546849,632522131,632865653,632522144,630018111,632809602,630016839,630008178,630008008,630016842,632546847,632809653,630016834,632522113,632809652,632809613,630008679,632809614,630002705,630002704,630008009,632865639,632546835,630002722,630016815,630016822,632865637,630016841,632522132,630008349,630016827,630003878,632809639,630016804,630016835,630003872,630016836,632809606,630018136,630003853,632865638,632522142,632865658,632809658,630016816,630002731,630003857,630018107,632522107,632522115,632522114,630018129,630008346,632522116,630003866,632522101,632865643,632809627,632809617,630003863,632546830,632522140,632522117,632522145,630003862,632809656,630016826,632809609,632809604,630018103,632546837,630002725,632809654,630008177,630018113,630003873,630008515,632522146,630008181,630003871,630003855,630008011,632546850,630008345,632522106,630002703,630016824,632524607,632546859,630016806,630016801,630003868,632809644,632865634,630002724,632522105,632524604,632546846,632522126,630003875,632809611,632546834,632809612,630008179,632865636,632522135,632522112,630008348,632809649,630018116,632522103,630003856,632809610,630016821,630018126,632522150,632809631,630008350,632522141,630002717,632546854,632524603,632809657,630003858,630002718,630002730,630018106,632546832,630002711,632809619,630016832,632546857,632524606,632546858";

    public static List<Long> times = Collections.synchronizedList(new ArrayList<>());


    //MyBatis查询方式
    public void queryDataMyBatis(LocalDateTime localDateTime, String threadName) {
        int n1 = random.nextInt(30);
        int n2 = random.nextInt(30);
        int n3 = random.nextInt(30);
        int n4 = random.nextInt(30);
        int n5 = random.nextInt(30);

        LocalDateTime localDateTime2 = localDateTime.plusHours(1);
        Instant start = Instant.now();

        List<QueryEntity> queryEntities = pgTest.queryCommon(realTime0.get(n1), realTime0.get(n2), realTime0.get(n3), realTime0.get(n4), realTime0.get(n5),
                wtids, localDateTime, localDateTime2);
        Instant end = Instant.now();
        long timeElapseds = Duration.between(start, end).toMillis();
        log.info(threadName + "——查询条数： " + queryEntities.size() + " 耗时：" + timeElapseds + "ms, 时间：" + localDateTime);
    }

    public void executeQuery(Integer times, String tableName, Integer deviceNum, long hours, Integer type, boolean isInteger, boolean isMars, PgTest pgTest) {
        while (times > 0) {
            WtidTime wtidTime = generateQuerySql(tableName, deviceNum, isInteger, isMars);
            queryDataMyBatis(tableName, wtidTime, hours, pgTest, type, times, deviceNum);
            times--;
        }
    }

    //MyBatis查询方式
    public void queryDataMyBatis(String tableName, WtidTime wtidTime, long hours, PgTest pgTest, Integer type, Integer time, Integer deviceNum) {
        LocalDateTime localDateTime1 = wtidTime.getLocalDateTime();
        List<Integer> wtids = wtidTime.getWtids();
        if (deviceNum == 300) {
            wtids = wtids.subList(0, 300);
        }

        LocalDateTime localDateTime2 = localDateTime1.plusHours(hours);

        int n1 = random.nextInt(30);
        int n2 = random.nextInt(30);
        int n3 = random.nextInt(30);
        int n4 = random.nextInt(30);
        int n5 = random.nextInt(30);

        try {
            if ("realtimedata_0".equals(tableName)) {
                long timeElapseds;
                if (type == 1) {
                    Instant start = Instant.now();
                    pgTest.queryCommon0(realTime0.get(n1), realTime0.get(n2), realTime0.get(n3), realTime0.get(n4), realTime0.get(n5),
                            wtids, localDateTime1, localDateTime2);
                    Instant end = Instant.now();
                    timeElapseds = Duration.between(start, end).toMillis();
                } else {
                    Instant start = Instant.now();
                    pgTest.querySampling0(realTime0.get(n1), realTime0.get(n2), realTime0.get(n3), realTime0.get(n4), realTime0.get(n5),
                            wtids, localDateTime1, localDateTime2);
                    Instant end = Instant.now();
                    timeElapseds = Duration.between(start, end).toMillis();
                }
                times.add(timeElapseds);
            } else if ("realtimedata_4".equals(tableName)) {
                long timeElapseds;
                if (type == 1) {
                    Instant start = Instant.now();
                    pgTest.queryCommon4(realTime4.get(n1), realTime4.get(n2), realTime4.get(n3), realTime4.get(n4), realTime4.get(n5),
                            wtids, localDateTime1, localDateTime2);
                    Instant end = Instant.now();
                    timeElapseds = Duration.between(start, end).toMillis();
                } else {
                    Instant start = Instant.now();
                    pgTest.querySampling4(realTime4.get(n1), realTime4.get(n2), realTime4.get(n3), realTime4.get(n4), realTime4.get(n5),
                            wtids, localDateTime1, localDateTime2);
                    Instant end = Instant.now();
                    timeElapseds = Duration.between(start, end).toMillis();
                }
                times.add(timeElapseds);
            } else if ("realtimedata_6".equals(tableName)) {
                long timeElapseds;
                if (type == 1) {
                    Instant start = Instant.now();
                    pgTest.queryCommon6(realTime6.get(n1), realTime6.get(n2), realTime6.get(n3), realTime6.get(n4), realTime6.get(n5),
                            wtids, localDateTime1, localDateTime2);
                    Instant end = Instant.now();
                    timeElapseds = Duration.between(start, end).toMillis();
                } else {
                    Instant start = Instant.now();
                    pgTest.querySampling6(realTime6.get(n1), realTime6.get(n2), realTime6.get(n3), realTime6.get(n4), realTime6.get(n5),
                            wtids, localDateTime1, localDateTime2);
                    Instant end = Instant.now();
                    timeElapseds = Duration.between(start, end).toMillis();
                }
                times.add(timeElapseds);
            } else if ("realtimedata_1000".equals(tableName)) {
                long timeElapseds;
                if (type == 1) {
                    Instant start = Instant.now();
                    pgTest.queryCommon1000(realTime1000.get(n1), realTime1000.get(n2), realTime1000.get(n3), realTime1000.get(n4), realTime1000.get(n5),
                            wtids, localDateTime1, localDateTime2);
                    Instant end = Instant.now();
                    timeElapseds = Duration.between(start, end).toMillis();
                } else {
                    Instant start = Instant.now();
                    pgTest.querySampling1000(realTime1000.get(n1), realTime1000.get(n2), realTime1000.get(n3), realTime1000.get(n4), realTime1000.get(n5),
                            wtids, localDateTime1, localDateTime2);
                    Instant end = Instant.now();
                    timeElapseds = Duration.between(start, end).toMillis();
                }
                times.add(timeElapseds);
            } else if ("statisticdata_0".equals(tableName)) {
                Instant start = Instant.now();
                pgTest.queryCommonStatistic0(statistic0.get(n1), statistic0.get(n2), statistic0.get(n3), statistic0.get(n4), statistic0.get(n5),
                        wtids, localDateTime1, localDateTime2);
                Instant end = Instant.now();
                long timeElapseds = Duration.between(start, end).toMillis();
                times.add(timeElapseds);
            } else if ("statisticdata_3".equals(tableName)) {
                Instant start = Instant.now();
                pgTest.queryCommonStatistic3(statistic3.get(n1), statistic3.get(n2), statistic3.get(n3), statistic3.get(n4), statistic3.get(n5),
                        wtids, localDateTime1, localDateTime2);
                Instant end = Instant.now();
                long timeElapseds = Duration.between(start, end).toMillis();
                times.add(timeElapseds);
            } else if ("statisticdata_4".equals(tableName)) {
                try {
                    int s1 = random.nextInt(28);
                    int s2 = random.nextInt(28);
                    int s3 = random.nextInt(28);
                    int s4 = random.nextInt(28);
                    int s5 = random.nextInt(28);
                    Instant start = Instant.now();
                    List<QueryEntity> queryEntities = pgTest.queryCommonStatistic4(statistic4.get(s1), statistic4.get(s2), statistic4.get(s3), statistic4.get(s4), statistic4.get(s5),
                            wtids, localDateTime1, localDateTime2);
                    Instant end = Instant.now();
                    long timeElapseds = Duration.between(start, end).toMillis();
                    times.add(timeElapseds);
//                log.info("成功条数：" + queryEntities.size() + " 耗时：" + timeElapseds + "次数 " + time);
                } catch (Exception e) {
                    e.printStackTrace();
                    log.error(e.getMessage());
                }

            }
        } catch (Exception e) {
            e.printStackTrace();
            log.error("queryDataMyBatis:" + e.getMessage());
        }
    }

    //JDBC查询方式
    public void queryData(String sql, Integer time) {
        try (Connection conn = DriverManager.getConnection("jdbc:postgresql://10.200.50.142:5432/env_soam", "mxadmin", "mxadmin");
             Statement stmt = conn.createStatement()) {

            Instant start = Instant.now();
            ResultSet rs = stmt.executeQuery(sql);
            Instant end = Instant.now();
            long timeElapses = Duration.between(start, end).toMillis();

            int rowCount = 0;
            while (rs.next()) {
                rowCount++;
            }
            stmt.close();

            rs.close();
//            log.info("查询条数： " + rowCount + " 耗时：" + timeElapses + "ms 剩余次数：" + time);
            times.add(timeElapses);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public WtidTime generateQuerySql(String tableName, Integer deviceNum, boolean isInteger, boolean isMars) {
        String wtid = "";
        LocalDateTime localDateTime1 = null;


        if ("realtimedata_0".equals(tableName)) {
            if (isInteger && isMars) {
                localDateTime1 = LocalDateTime.of(2022, 04, 12, 00, 00, 00);
            } else if (!isInteger && isMars) {
                localDateTime1 = LocalDateTime.of(2022, 04, 12, 00, 11, 11);
            } else if (isInteger && !isMars) {
                localDateTime1 = LocalDateTime.of(2022, 05, 8, 00, 00, 00);
            } else if (!isInteger && !isMars) {
                localDateTime1 = LocalDateTime.of(2022, 05, 8, 00, 11, 11);
            }

            if (deviceNum == 10) {
                wtid = realTime0_10;
            } else if (deviceNum == 100) {
                wtid = realTime0_100;
            } else if (deviceNum == 600 || deviceNum == 300) {
                wtid = realTime0_600;
            }
        } else if ("realtimedata_4".equals(tableName)) {

            if (isInteger && isMars) {
                localDateTime1 = LocalDateTime.of(2022, 04, 12, 12, 00, 00);
            } else if (!isInteger && isMars) {
                localDateTime1 = LocalDateTime.of(2022, 04, 12, 12, 20, 20);
            } else if (isInteger && !isMars) {
                localDateTime1 = LocalDateTime.of(2022, 05, 8, 00, 00, 00);
            } else if (!isInteger && !isMars) {
                localDateTime1 = LocalDateTime.of(2022, 05, 01, 00, 27, 27);
            }

            if (deviceNum == 10) {
                wtid = realTime4_10;
            } else if (deviceNum == 100) {
                wtid = realTime4_100;
            } else if (deviceNum == 1000 || deviceNum == 300) {
                wtid = realTime4_1000;
            }
        } else if ("realtimedata_6".equals(tableName)) {

            if (isInteger && isMars) {
                localDateTime1 = LocalDateTime.of(2022, 04, 12, 00, 00, 00);
            } else if (!isInteger && isMars) {
                localDateTime1 = LocalDateTime.of(2022, 04, 12, 00, 30, 11);
            } else if (isInteger && !isMars) {
                localDateTime1 = LocalDateTime.of(2022, 05, 8, 00, 00, 00);
            } else if (!isInteger && !isMars) {
                localDateTime1 = LocalDateTime.of(2022, 05, 01, 00, 27, 27);
            }

            if (deviceNum == 10) {
                wtid = realTime6_10;
            } else if (deviceNum == 100) {
                wtid = realTime6_100;
            } else if (deviceNum == 1000 || deviceNum == 300) {
                wtid = realTime6_1000;
            }

        } else if ("realtimedata_1000".equals(tableName)) {

            if (isInteger && isMars) {
                localDateTime1 = LocalDateTime.of(2022, 04, 12, 00, 00, 00);
            } else if (!isInteger && isMars) {
                localDateTime1 = LocalDateTime.of(2022, 04, 12, 00, 49, 17);
            } else if (isInteger && !isMars) {
                localDateTime1 = LocalDateTime.of(2022, 05, 8, 00, 00, 00);
            } else if (!isInteger && !isMars) {
                localDateTime1 = LocalDateTime.of(2022, 05, 01, 00, 27, 27);
            }

            if (deviceNum == 1000 || deviceNum == 300) {
                wtid = realTime1000_1000;
            } else if (deviceNum == 10) {
                wtid = realTime1000_10;
            } else if (deviceNum == 100) {
                wtid = realTime1000_100;
            }
        } else if ("statisticdata_0".equals(tableName)) {

            if (isInteger) {
                localDateTime1 = LocalDateTime.of(2022, 03, 28, 00, 00, 00);
            } else {
                localDateTime1 = LocalDateTime.of(2022, 03, 28, 00, 20, 00);
            }


            if (deviceNum == 600) {
                wtid = realTime0_600;
            } else if (deviceNum == 10) {
                wtid = realTime0_10;
            } else if (deviceNum == 100) {
                wtid = realTime0_100;
            }
        } else if ("statisticdata_3".equals(tableName)) {

            if (isInteger) {
                localDateTime1 = LocalDateTime.of(2022, 04, 01, 00, 00, 00);
            } else {
                localDateTime1 = LocalDateTime.of(2022, 04, 01, 00, 20, 00);
            }

            if (deviceNum == 490) {
                wtid = realTime3_400;
            } else if (deviceNum == 10) {
                wtid = realTime3_10;
            } else if (deviceNum == 100) {
                wtid = realTime3_100;
            }
        } else if ("statisticdata_4".equals(tableName)) {

            if (isInteger) {
                localDateTime1 = LocalDateTime.of(2022, 04, 02, 8, 00, 00);
            } else {
                localDateTime1 = LocalDateTime.of(2022, 04, 02, 8, 20, 00);
            }

            if (deviceNum == 1000) {
                wtid = realTime4_1000;
            } else if (deviceNum == 10) {
                wtid = realTime4_10;
            } else if (deviceNum == 100) {
                wtid = realTime4_100;
            }
        }

        WtidTime wtidTime = new WtidTime();
        wtidTime.setWtids(Arrays.stream(wtid.split(",")).map(Integer::parseInt).collect(Collectors.toList()));
        wtidTime.setLocalDateTime(localDateTime1);
        wtidTime.setSize(deviceNum);

        return wtidTime;
    }


    public String generateSql(String tableName, int type, String wtid, LocalDateTime localDateTime1, LocalDateTime localDateTime2) {

        int n1 = random.nextInt(30);
        int n2 = random.nextInt(30);
        int n3 = random.nextInt(30);
        int n4 = random.nextInt(30);
        int n5 = random.nextInt(30);

        String column1 = "";
        String column2 = "";
        String column3 = "";
        String column4 = "";
        String column5 = "";

        //测点随机
        if ("realtimedata_0".equals(tableName)) {
            column1 = realTime0.get(n1);
            column2 = realTime0.get(n2);
            column3 = realTime0.get(n3);
            column4 = realTime0.get(n4);
            column5 = realTime0.get(n5);
        } else if ("realtimedata_1000".equals(tableName)) {
            column1 = realTime1000.get(n1);
            column2 = realTime1000.get(n2);
            column3 = realTime1000.get(n3);
            column4 = realTime1000.get(n4);
            column5 = realTime1000.get(n5);
        } else if ("realtimedata_4".equals(tableName)) {
            column1 = realTime4.get(n1);
            column2 = realTime4.get(n2);
            column3 = realTime4.get(n3);
            column4 = realTime4.get(n4);
            column5 = realTime4.get(n5);
        } else if ("realtimedata_1".equals(tableName)) {
            column1 = realTime1.get(n1);
            column2 = realTime1.get(n2);
            column3 = realTime1.get(n3);
            column4 = realTime1.get(n4);
            column5 = realTime1.get(n5);
        } else if ("realtimedata_6".equals(tableName)) {
            column1 = realTime6.get(n1);
            column2 = realTime6.get(n2);
            column3 = realTime6.get(n3);
            column4 = realTime6.get(n4);
            column5 = realTime6.get(n5);
        }

        String sql;

        if (type == 1) {
            //通用查询
            sql = "SELECT wtid, COUNT(\"" + column1 + "\") " +
                    ", avg(\"" + column2 + "\"::float) , sum(\"" + column3 + "\"::float) , max(\"" + column4 + "\") , min(\"" + column5 + "\") \n" +
                    "        FROM " + tableName + "\n" +
                    "        WHERE  wtid in\n(" + wtid +
                    "        )AND \"WTUR.Tm.Rw.Dt\" >= '" + localDateTime1 + "'\n" +
                    "        AND \"WTUR.Tm.Rw.Dt\" <'" + localDateTime2 + "'" +
                    "        GROUP BY wtid;";
        } else {
            //采样查询
            sql = "SELECT wtid, time_bucket('5 minutes', \"WTUR.Tm.Rw.Dt\") tb, COUNT(\"" + column1 + "\")\n" +
                    ", avg(\"" + column2 + "\"::float) , sum(\"" + column3 + "\"::float) , max(\"" + column4 + "\") , min(\"" + column5 + "\") \n" +
                    "FROM " + tableName + "\n" +
                    "WHERE  wtid in (" + wtid +
                    ")\n" +
                    "     AND \"WTUR.Tm.Rw.Dt\" >= '" + localDateTime1 + "'\n" +
                    "    AND \"WTUR.Tm.Rw.Dt\" < ' " + localDateTime2 + "'\n" +
                    "GROUP BY wtid, tb\n" +
                    "ORDER BY wtid, tb; ";
        }

        return sql;
    }

}
